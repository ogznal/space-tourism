/* eslint-disable @next/next/no-img-element */
import { type NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import { Navbar } from "../components/navbar";
import data from "../../json/data.json";

import { Barlow_Condensed, Bellefair } from "@next/font/google";
import { DestinationButton } from "../components/destinationButton";

const barlow_condensed = Barlow_Condensed({
  weight: ["300", "500"],
  subsets: ["latin"],
});

const bellefair = Bellefair({ weight: "400", subsets: ["latin"] });

const DestinationPage: NextPage = () => {
  const [currentDest, setCurrentDest] = useState(0);

  const handleTab = (e: React.MouseEvent<HTMLButtonElement>) => {
    setCurrentDest(parseInt(e.currentTarget.value));
  };

  return (
    <>
      <Head>
        <title>Space Tourism</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/assets/favicon-32x32.png" />
      </Head>
      <main
        className="flex min-h-screen 
        flex-col
        bg-[url('/assets/destination/background-destination-mobile.jpg')] bg-cover md:bg-[url('/assets/destination/background-destination-tablet.jpg')] lg:bg-[url('/assets/destination/background-destination-desktop.jpg')]"
      >
        <Navbar currentPage="destination" />
        <section className="flex flex-row pt-16">
          <div className="flex basis-2/3 flex-col">
            <div className="ml-40 mb-12 flex flex-row tracking-[0.16em]">
              <span
                className={`${barlow_condensed.className} mr-4 text-2xl text-white text-opacity-25`}
              >
                01
              </span>
              <h4
                className={`uppercase ${barlow_condensed.className} text-2xl font-light text-white`}
              >
                Pick your destination
              </h4>
            </div>
            <img
              className="h-96 w-96 self-center"
              src={data.destinations[currentDest]?.images.webp}
              alt={data.destinations[currentDest]?.name}
            />
          </div>
          <div className="mr-60 flex basis-1/3 flex-col">
            <ul
              className={`flex ${barlow_condensed.className} mb-4 w-full flex-row gap-x-4 font-light text-white`}
            >
              <li>
                <DestinationButton value={0} handler={(e) => handleTab(e)} />
              </li>
              <li>
                <DestinationButton value={1} handler={(e) => handleTab(e)} />
              </li>
              <li>
                <DestinationButton value={2} handler={(e) => handleTab(e)} />
              </li>
              <li>
                <DestinationButton value={3} handler={(e) => handleTab(e)} />
              </li>
            </ul>
            <h1
              className={`text-8xl uppercase text-white ${bellefair.className} my-4`}
            >
              {data.destinations[currentDest]?.name}
            </h1>
            <p
              className={`text-[#D0D6F9] ${barlow_condensed.className} text-lg font-light leading-relaxed tracking-wide`}
            >
              {data.destinations[currentDest]?.description}
            </p>
            <hr className="my-8 h-px border-0 bg-[#383B4B]" />
            <div className="flex flex-row uppercase">
              <div className="flex basis-1/2 flex-col">
                <span
                  className={`text-[#D0D6F9] ${barlow_condensed.className} text-sm font-light`}
                >
                  avg. distance
                </span>
                <span className={`text-white ${bellefair.className} text-2xl`}>
                  {data.destinations[currentDest]?.distance}
                </span>
              </div>
              <div className="flex basis-1/2 flex-col">
                <span
                  className={`text-[#D0D6F9] ${barlow_condensed.className} text-sm font-light`}
                >
                  est. travel time
                </span>
                <span className={`text-white ${bellefair.className} text-2xl`}>
                  {data.destinations[currentDest]?.travel}
                </span>
              </div>
            </div>
          </div>
        </section>
      </main>
    </>
  );
};

export default DestinationPage;
